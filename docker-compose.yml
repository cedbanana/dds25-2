version: "3"
services:

  traefik:
    image: traefik:v2.5
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:8000"
      - "--api.dashboard=true"
    ports:
      - "8000:8000"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - order-service
      - stock-service
      - payment-service

  order-service:
    build:
      context: .
      dockerfile: Dockerfile.order
    image: order:latest
    command: gunicorn -b 0.0.0.0:5000 -w 2 --timeout 30 --log-level=info app:app
    env_file:
      - env/order_redis.env
    depends_on:
      - order-db
    deploy:
      replicas: 1
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.order.rule=PathPrefix(`/orders/`)"
      - "traefik.http.middlewares.order-stripprefix.stripprefix.prefixes=/orders"
      - "traefik.http.routers.order.middlewares=order-stripprefix"
      - "traefik.http.services.order.loadbalancer.server.port=5000"

  order-db:
    image: redis:7.2-bookworm
    command: redis-server --requirepass redis --maxmemory 512mb

  stock-service:
    build:
      context: .
      dockerfile: Dockerfile.stock
    image: stock:latest
    command: gunicorn -b 0.0.0.0:5000 -w 2 --timeout 30 --log-level=info app:app
    env_file:
      - env/stock_redis.env
    depends_on:
      - stock-db
    deploy:
      replicas: 1
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.stock.rule=PathPrefix(`/stock/`)"
      - "traefik.http.middlewares.stock-stripprefix.stripprefix.prefixes=/stock"
      - "traefik.http.routers.stock.middlewares=stock-stripprefix"
      - "traefik.http.services.stock.loadbalancer.server.port=5000"

  stock-db:
    image: redis:7.2-bookworm
    command: redis-server --requirepass redis --maxmemory 512mb

  payment-service:
    build:
      context: .
      dockerfile: Dockerfile.payment
    image: user:latest
    command: gunicorn -b 0.0.0.0:5000 -w 2 --timeout 30 --log-level=info app:app
    env_file:
      - env/payment_redis.env
    depends_on:
      - payment-db
    deploy:
      replicas: 1
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.payment.rule=PathPrefix(`/payment/`)"
      - "traefik.http.middlewares.payment-stripprefix.stripprefix.prefixes=/payment"
      - "traefik.http.routers.payment.middlewares=payment-stripprefix"
      - "traefik.http.services.payment.loadbalancer.server.port=5000"

  payment-db:
    image: redis:7.2-bookworm
    command: redis-server --requirepass redis --maxmemory 512mb

  dev_redis:
    image: redis:7.2-bookworm
    command: redis-server --requirepass redis --maxmemory 512mb
    networks:
      devnet_dds:
        ipv4_address: 172.172.69.10

networks:
  devnet_dds:
    driver: bridge
    ipam:
      config:
        - subnet: 172.172.69.0/24
