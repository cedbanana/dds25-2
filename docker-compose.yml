version: "3"
services:
  # Traefik configuration remains the same
  traefik:
    image: traefik:v2.5
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:8000"
      - "--api.dashboard=false"
      - "--serversTransport.maxIdleConnsPerHost=30000"
    ports:
      - "8000:8000"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - order-service
      - stock-service
      - payment-service
    ulimits:
      nofile:
        soft: "65536"
        hard: "65536"

  order-service:
    build:
      context: .
      dockerfile: Dockerfile.order
    image: order:latest
    command: gunicorn -b 0.0.0.0:5000 -w 2 --timeout 30 --log-level=info app:app
    env_file:
      - env/order_redis.env
    environment: &dbenv
      DB_TYPE: redis
      PROFILING: false
    depends_on:
      - redis-order
      - stock-service
      - payment-service
    deploy:
      replicas: 1
    volumes:
      - './order/profiles:/home/flask-app/profiles'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.order.rule=PathPrefix(`/orders/`)"
      - "traefik.http.middlewares.order-stripprefix.stripprefix.prefixes=/orders"
      - "traefik.http.routers.order.middlewares=order-stripprefix"
      - "traefik.http.services.order.loadbalancer.server.port=5000"

  stock-service:
    build:
      context: .
      dockerfile: Dockerfile.stock
    image: stock:latest
    command: gunicorn -b 0.0.0.0:5000 -w 2 --timeout 30 --log-level=info app:app
    env_file:
      - env/stock_redis.env
    environment: *dbenv
    depends_on:
      - redis-stock
    deploy:
      replicas: 1
    volumes:
      - './stock/profiles:/home/flask-app/profiles'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.stock.rule=PathPrefix(`/stock/`)"
      - "traefik.http.middlewares.stock-stripprefix.stripprefix.prefixes=/stock"
      - "traefik.http.routers.stock.middlewares=stock-stripprefix"
      - "traefik.http.services.stock.loadbalancer.server.port=5000"

  payment-service:
    build:
      context: .
      dockerfile: Dockerfile.payment
    image: payment:latest
    command: gunicorn -b 0.0.0.0:5000 -w 2 --timeout 30 --log-level=info app:app
    env_file:
      - env/payment_redis.env
    environment: *dbenv
    depends_on:
      - redis-payment
    volumes:
      - './payment/profiles:/home/flask-app/profiles'
    deploy:
      replicas: 1
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.payment.rule=PathPrefix(`/payment/`)"
      - "traefik.http.middlewares.payment-stripprefix.stripprefix.prefixes=/payment"
      - "traefik.http.routers.payment.middlewares=payment-stripprefix"
      - "traefik.http.services.payment.loadbalancer.server.port=5000"

  ## Database Solutions
  redis-payment:
    image: redis:7.2-bookworm
    command: redis-server --requirepass redis --maxmemory 1024mb
    networks:
      default:
      devnet_dds:
        ipv4_address: 172.172.69.10

  redis-order:
    image: redis:7.2-bookworm
    command: redis-server --requirepass redis --maxmemory 1024mb

  redis-stock:
    image: redis:7.2-bookworm
    command: redis-server --requirepass redis --maxmemory 1024mb

  ignite:
    image: apacheignite/ignite:2.14.0
    container_name: ignite
    networks:
      default:
      devnet_dds:
        ipv4_address: 172.172.69.11

  ## Monitoring Solutions
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      default:
      devnet_dds:
        ipv4_address: 172.172.69.12
    depends_on:
      - order-service
      - stock-service
      - payment-service

  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    networks:
      default:
      devnet_dds:
        ipv4_address: 172.172.69.13
    depends_on:
      - prometheus

networks:
  devnet_dds:
    driver: bridge
    ipam:
      config:
        - subnet: 172.172.69.0/24
