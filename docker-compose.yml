version: "3"
services:
  # Traefik configuration remains the same
  gateway:
    image: traefik:v2.5
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:8000"
      - "--api.dashboard=false"
      - "--serversTransport.maxIdleConnsPerHost=30000"
    ports:
      - "8000:8000"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - order-service
      - stock-service
      - payment-service
    ulimits:
      nofile:
        soft: "65536"
        hard: "65536"

  order-service:
    build:
      context: .
      dockerfile: Dockerfile.order
    image: order:latest
    command: gunicorn -b 0.0.0.0:5000 -w 2 --timeout 30 --log-level=info -k uvicorn.workers.UvicornWorker app:app
    env_file:
      - env/order_redis.env
    environment: &dbenv
      PYTHONUNBUFFERED: 1
      DB_TYPE: redis
      PROFILING: false
    depends_on:
      - redis-order
      - stock-service
      - payment-service
    deploy:
      replicas: 3
    volumes:
      - './order/profiles:/home/flask-app/profiles'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.order.rule=PathPrefix(`/orders/`)"
      - "traefik.http.middlewares.order-stripprefix.stripprefix.prefixes=/orders"
      - "traefik.http.routers.order.middlewares=order-stripprefix"
      - "traefik.http.services.order.loadbalancer.server.port=5000"
    ulimits:
      nofile:
        soft: "65536"
        hard: "65536"

  stock-service:
    build:
      context: .
      dockerfile: Dockerfile.stock
    image: stock:latest
    command: gunicorn -b 0.0.0.0:5000 -w 2 --timeout 30 --log-level=info app:app
    env_file:
      - env/stock_redis.env
    environment: *dbenv
    depends_on:
      - redis-stock
    deploy:
      replicas: 1
    volumes:
      - './stock/profiles:/home/flask-app/profiles'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.stock.rule=PathPrefix(`/stock/`)"
      - "traefik.http.middlewares.stock-stripprefix.stripprefix.prefixes=/stock"
      - "traefik.http.routers.stock.middlewares=stock-stripprefix"
      - "traefik.http.services.stock.loadbalancer.server.port=5000"
    ulimits:
      nofile:
        soft: "65536"
        hard: "65536"

  stock-rpc:
    build:
      context: .
      dockerfile: Dockerfile.stock
    image: stock:latest
    command: python rpc.py
    env_file:
      - env/stock_redis.env
    environment: *dbenv
    depends_on:
      - redis-stock
    deploy:
      replicas: 2
    volumes:
      - './stock/profiles:/home/flask-app/profiles'
    ulimits:
      nofile:
        soft: "65536"
        hard: "65536"

  stock-stream:
    build:
      context: .
      dockerfile: Dockerfile.stock
    image: stock:latest
    command: python stream.py
    env_file:
      - env/stock_redis.env
    environment: *dbenv
    depends_on:
      - redis-stock
    deploy:
      replicas: 8 # stream
    volumes:
      - './stock/profiles:/home/flask-app/profiles'

  payment-service:
    build:
      context: .
      dockerfile: Dockerfile.payment
    image: payment:latest
    command: gunicorn -b 0.0.0.0:5000 -w 2 --timeout 30 --log-level=info app:app
    env_file:
      - env/payment_redis.env
    environment: *dbenv
    depends_on:
      - redis-payment
    volumes:
      - './payment/profiles:/home/flask-app/profiles'
    deploy:
      replicas: 1
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.payment.rule=PathPrefix(`/payment/`)"
      - "traefik.http.middlewares.payment-stripprefix.stripprefix.prefixes=/payment"
      - "traefik.http.routers.payment.middlewares=payment-stripprefix"
      - "traefik.http.services.payment.loadbalancer.server.port=5000"
    ulimits:
      nofile:
        soft: "65536"
        hard: "65536"

  payment-rpc:
    build:
      context: .
      dockerfile: Dockerfile.payment
    image: payment:latest
    command: python rpc.py
    env_file:
      - env/payment_redis.env
    environment: *dbenv
    depends_on:
      - redis-payment
    volumes:
      - './payment/profiles:/home/flask-app/profiles'
    deploy:
      replicas: 2

  payment-stream:
    build:
      context: .
      dockerfile: Dockerfile.payment
    image: payment:latest
    command: python stream.py
    env_file:
      - env/payment_redis.env
    environment: *dbenv
    depends_on:
      - redis-payment
    volumes:
      - './payment/profiles:/home/flask-app/profiles'
    deploy:
      replicas: 8 # stream

  ## Database Solutions
  redis-payment:
    image: redis:7.2-bookworm
    command: redis-server --requirepass redis --maxmemory 1024mb & sleep 3 && redis-cli -a redis FLUSHALL

  redis-order:
    image: redis:7.2-bookworm
    command: redis-server --requirepass redis --maxmemory 1024mb & sleep 3 && redis-cli -a redis FLUSHALL

  redis-stock:
    image: redis:7.2-bookworm
    command: redis-server --requirepass redis --maxmemory 1024mb & sleep 3 && redis-cli -a redis FLUSHALL

  # Locust for testing
  master:
    build:
      context: .
      dockerfile: Dockerfile.locust
    ports:
     - "8089:8089"
    volumes:
      - ./tests:/mnt/locust
    command: -f /mnt/locust/stress/locustfile.py --master -H http://master:8089

  worker:
    build:
      context: .
      dockerfile: Dockerfile.locust
    image: locustio/locust
    volumes:
      - ./tests:/mnt/locust
    command: -f /mnt/locust/stress/locustfile.py --worker --master-host master
    deploy:
      replicas: 1
    ulimits:
      nofile:
        soft: "65536"
        hard: "65536"
